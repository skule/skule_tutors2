{"ts":1352407785179,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"from django.db import models\nfrom django.contrib.auth.models import User\nfrom course_manage.models import Course\nfrom django.db.models.signals import post_delete\nfrom django.dispatch import receiver\n\nclass Tutor(models.Model):\n    # personal info\n    name = models.CharField(max_length = 50)\n    email = models.EmailField()\n    phone = models.CharField(max_length = 20, blank = True)\n\n    # tutor info\n    qualifications = models.TextField()\n    taught_courses = models.ManyToManyField(Course, null = True)\n    rate = models.DecimalField(decimal_places = 2, max_digits = 10)\n\n    # system info\n    auth = models.OneToOneField(User, null = True)\n    approved = models.BooleanField(default = False)\n    last_updated = models.DateTimeField(auto_now = True, auto_created = True)\n\n    def __unicode__(self):\n        return self.name\n\n        # TODO use python phonenumbers to process the phone number\n\n\n@receiver(post_delete, sender = Tutor)\ndef Tutor_delete_handler(sender, instance, **kwargs):\n    user = instance.auth\n    if not user.is_staff and not user.is_superuser:\n        user.delete()\n"]],"start1":0,"start2":0,"length1":0,"length2":1090}]],"length":1090}
{"contributors":[],"silentsave":false,"ts":1352407924872,"patch":[[{"diffs":[[0,"elf.name"],[1,"\n    \n    def qualifications_as_p(self):\n        paragraphs = self.qualifications.split('\\n')\n        as_p = ''\n        for line in paragraphs:\n            as_p += '<p>' + line + '</p>\\n'\n        return as_p"],[0,"\n\n      "]],"start1":819,"start2":819,"length1":16,"length2":223}]],"length":1297,"saved":false}
{"ts":1352408010923,"patch":[[{"diffs":[[0,"ions_as_"],[-1,"p"],[1,"list"],[0,"(self):\n"]],"start1":851,"start2":851,"length1":17,"length2":20},{"diffs":[[0,"    "],[-1,"paragraphs ="],[1,"return"],[0," sel"]],"start1":875,"start2":875,"length1":20,"length2":14},{"diffs":[[0,"\\n')"],[-1,"\n        as_p = ''\n        for line in paragraphs:\n            as_p += '<p>' + line + '</p>\\n'\n        return as_p"],[0,"\n\n  "]],"start1":913,"start2":913,"length1":122,"length2":8}]],"length":1180,"saved":false}
